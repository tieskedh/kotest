(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{134:function(t,e,r){"use strict";r.d(e,"a",(function(){return u})),r.d(e,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var p=o.a.createContext({}),l=function(t){var e=o.a.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},u=function(t){var e=l(t.components);return o.a.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},f=o.a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,a=t.originalType,i=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),u=l(r),f=n,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||a;return r?o.a.createElement(m,c(c({ref:e},p),{},{components:r})):o.a.createElement(m,c({ref:e},p))}));function m(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:n,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},83:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return c})),r.d(e,"rightToc",(function(){return s})),r.d(e,"default",(function(){return l}));var n=r(3),o=r(7),a=(r(0),r(134)),i={id:"thirdparty",title:"Third Party Integrations"},c={unversionedId:"thirdparty",id:"thirdparty",isDocsHomePage:!1,title:"Third Party Integrations",description:"This page lists some integrations from third party libraries and frameworks that are maintained and hosted outside of the Kotest repositories.",source:"@site/docs/third_party_integrations.md",slug:"/thirdparty",permalink:"/docs/thirdparty",editUrl:"https://github.com/kotest/kotest/docs/third_party_integrations.md",version:"current",sidebar:"docs",previous:{title:"Changelog",permalink:"/docs/changelog.html"},next:{title:"Blogs and Articles on Kotest",permalink:"/docs/blogs"}},s=[],p={rightToc:s};function l(t){var e=t.components,r=Object(o.a)(t,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This page lists some integrations from third party libraries and frameworks that are maintained and hosted outside of the Kotest repositories."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/http4k/http4k/tree/master/http4k-testing-kotest"}),"Http4k")," - Functional toolkit for Kotlin HTTP applications"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/micronaut-projects/micronaut-test"}),"Micronaut")," - JVM-based, full-stack framework for building modular, easily testable microservice")))}l.isMDXComponent=!0}}]);