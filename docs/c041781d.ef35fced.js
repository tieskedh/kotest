(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{112:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return l})),a.d(e,"metadata",(function(){return i})),a.d(e,"rightToc",(function(){return c})),a.d(e,"default",(function(){return d}));var n=a(3),r=a(7),b=(a(0),a(134)),l={id:"kotlinx_datetime",title:"Kotlinx Datetime Matchers",slug:"kotlinx-datetime-matchers.html"},i={unversionedId:"assertions/kotlinx_datetime",id:"assertions/kotlinx_datetime",isDocsHomePage:!1,title:"Kotlinx Datetime Matchers",description:"Matchers for the Kotlinx Datetime library are provided by the kotest-assertions-kotlinx-time module.",source:"@site/docs/assertions/kotlinx-datetime.md",slug:"/assertions/kotlinx-datetime-matchers.html",permalink:"/docs/assertions/kotlinx-datetime-matchers.html",editUrl:"https://github.com/kotest/kotest/docs/assertions/kotlinx-datetime.md",version:"current",sidebar:"assertions",previous:{title:"Konform Matchers",permalink:"/docs/assertions/konform-matchers.html"},next:{title:"Ktor Matchers",permalink:"/docs/assertions/ktor-matchers.html"}},c=[],o={rightToc:c};function d(t){var e=t.components,a=Object(r.a)(t,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Matchers for the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Kotlin/kotlinx-datetime"}),"Kotlinx Datetime")," library are provided by the ",Object(b.b)("inlineCode",{parentName:"p"},"kotest-assertions-kotlinx-time")," module."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"LocalDate"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveSameYearAs(otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date has the same year as the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveSameMonthAs(otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date has the same month as the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveSameDayAs(otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date has the same day of the month as the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldBeBefore(otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date is before the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldBeAfter(otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date is after the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldBeWithin(period, otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date is within the period of the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldBeWithin(duration, otherDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date is within the duration of the given date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldBeBetween(firstDate, secondDate)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date is between firstdate and seconddate.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveYear(year)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct year.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveMonth(month)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct month.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveDayOfYear(day)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct day of year.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveDayOfMonth(day)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct day of month.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveDayOfWeek(day)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct day of week.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveHour(hour)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct hour.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveMinute(Minute)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct minute.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveSecond(second)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct second.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date.shouldHaveNano(nano)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the date have correct nano second.")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"LocalDateTime"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldHaveSameHoursAs(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time has the same hours as the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldHaveSameMinutesAs(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time has the same minutes as the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldHaveSameSecondsAs(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time has the same seconds as the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldHaveSameNanosAs(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time has the same nanos as the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldBeBefore(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time is before the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldBeAfter(otherTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time is after the given time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time.shouldBeBetween(firstTime, secondTime)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the time is between firstTime and secondTime.")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Instant"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"instant.shouldBeAfter(anotherInstant)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the instant is after anotherInstant")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"instant.shouldBeBefore(anotherInstant)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the instant is before anotherInstant")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"instant.shouldBeBetween(fromInstant, toInstant)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Asserts that the instant is between fromInstant and toInstant")))))}d.isMDXComponent=!0},134:function(t,e,a){"use strict";a.d(e,"a",(function(){return s})),a.d(e,"b",(function(){return j}));var n=a(0),r=a.n(n);function b(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){b(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},b=Object.keys(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=r.a.createContext({}),d=function(t){var e=r.a.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=d(t.components);return r.a.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},O=r.a.forwardRef((function(t,e){var a=t.components,n=t.mdxType,b=t.originalType,l=t.parentName,o=c(t,["components","mdxType","originalType","parentName"]),s=d(a),O=n,j=s["".concat(l,".").concat(O)]||s[O]||m[O]||b;return a?r.a.createElement(j,i(i({ref:e},o),{},{components:a})):r.a.createElement(j,i({ref:e},o))}));function j(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var b=a.length,l=new Array(b);l[0]=O;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:n,l[1]=i;for(var o=2;o<b;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);