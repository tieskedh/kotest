(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{134:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),i=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),m=r,d=p["".concat(l,".").concat(m)]||p[m]||b[m]||o;return n?a.a.createElement(d,s(s({ref:t},u),{},{components:n})):a.a.createElement(d,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return i}));var r=n(3),a=n(7),o=(n(0),n(134)),l={title:"Clues",slug:"clues.html"},s={unversionedId:"assertions/clues",id:"assertions/clues",isDocsHomePage:!1,title:"Clues",description:"Sometimes a failed assertion contains enough information in the error message to know what went wrong.",source:"@site/docs/assertions/clues.md",slug:"/assertions/clues.html",permalink:"/docs/assertions/clues.html",editUrl:"https://github.com/kotest/kotest/docs/assertions/clues.md",version:"current",sidebar:"assertions",previous:{title:"Exceptions",permalink:"/docs/assertions/exceptions.html"},next:{title:"Soft Assertions",permalink:"/docs/assertions/soft-assertions.html"}},c=[],u={rightToc:c};function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Sometimes a failed assertion contains enough information in the error message to know what went wrong."),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-kotlin"}),'username shouldBe "sksamuel"\n')),Object(o.b)("p",null,"Might give an error like:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'expected: "sksamuel" but was: "sam@myemailaddress.com"\n')),Object(o.b)("p",null,"And you would be able to see that you were populating the username field with an email address."),Object(o.b)("p",null,"But let's say you had a test like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-kotlin"}),"user.name shouldNotBe null\n")),Object(o.b)("p",null,"If this failed, you would simply get:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"<null> should not equal <null>\n")),Object(o.b)("p",null,"Which isn't particularly helpful. This is where ",Object(o.b)("inlineCode",{parentName:"p"},"withClue")," comes into play."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"withClue")," and ",Object(o.b)("inlineCode",{parentName:"p"},"asClue")," helpers can add extra context to assertions so failures are self explanatory:"),Object(o.b)("p",null,"For example, we can use ",Object(o.b)("inlineCode",{parentName:"p"},"withClue")," with a string message"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-kotlin"}),'withClue("Name should be present") {\n  user.name shouldNotBe null\n}\n')),Object(o.b)("p",null,"Would give an error like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Name should be present\n<null> should not equal <null>\n")),Object(o.b)("p",null,"We can also use the ",Object(o.b)("inlineCode",{parentName:"p"},"asClue")," extension function to turn any object into the clue message."),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-kotlin"}),'data class HttpResponse(val status: Int, val body: String)\n\nval response = HttpResponse(404, "the content")\n\nresponse.asClue {\n    it.status shouldBe 200\n    it.body shouldBe "the content"\n}\n')),Object(o.b)("p",null,"Would output:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"HttpResponse(status=404, body=the content)\nExpected :200\nActual   :404\n")))}i.isMDXComponent=!0}}]);